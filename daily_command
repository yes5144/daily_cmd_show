# 1, vim 多行添加注释
#
:45,58s/^/#/g   # 45-58行 添加注释

# 2, mysql数据库授权
#
> create database jumpserver default charset 'utf8';
> grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by 'somepassword';
> flush privileges;
> show grant for jumpserver@'127.0.0.1';

# 3, config aliyun Pypi，配置 aliyun-Pypi仓库
#
[ ! -d ~/.pip/ ] && mkdir ~/.pip/

cat >~/.pip/pip.conf <<EOF
[global]
index-url = http://mirrors.aliyun.com/pypi/simple/

[install]
trusted-host=mirrors.aliyun.com

EOF

# 4, centos7设置字符集，中文支持
#
localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8
export LC_ALL=zh_CN.UTF-8
echo 'LANG="zh_CN.UTF-8"' > /etc/locale.conf

# 5, 查询服务是否在线
#
netstat -ntlp |grep mysql
ps -ef |grep mysql
lsof -i :3306
ls -l /proc/PID号

# 6，mysql添加字段，修改字段，添加索引
#
USE airflow_18_221;
SHOW COLUMNS FROM `task_instance`;
ALTER TABLE `task_instance` ADD COLUMN `max_tries` int(11) DEFAULT '-1';
ALTER TABLE `task_instance` ADD INDEX `ti_job_id` (`job_id`);

ALTER TABLE `variable` MODIFY `val` mediumtext;

# 7, redis报错
#
redis-cli
6379 > config set stop-writes-on-bgsave-error no

# 8, 执行了一个alter DDL ,报等待
#
> SHOW PROCESSLIST;
# 
> select trx_state, trx_started, trx_mysql_thread_id, trx_query from information_schema.innodb_trx \G;
# 默认锁一年
> set session lock_wait_timeout = 1800;
> set global lock_wait_timeout = 1800;

# 9, (1205, 'Lock wait timeout exceeded; try restarting transaction')
#
> show processlist;
> kill trx_mysql_thread_id; #( ID )

# 增加锁等待时间，即增大下面配置项参数值，单位为秒（s）
# innodb_lock_wait_timeout=500

# 10, 命令组合之 find
# 查找目录下的所有文件中是否含有某个字符串 
find .|xargs grep -ri "IBM" 
# 查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名 
find .|xargs grep -ri "IBM" -l

find airflow |xargs grep -ri 'datetime\.now' --color=auto 
find airflow -type f -print0 | xargs -0 sed -i 's/datetime.utcnow()/datetime.now(tz=None)/g'
find airflow |xargs grep -ri 'datetime\.utcnow' --color=auto
find airflow |xargs grep -ri 'datetime\.now' --color=auto

# 11， mysql权限详细
#
mysql> REVOKE INSERT ON *.* FROM 'jeffrey'@'localhost';
mysql> show grants for airflow@localhost;
+----------------------------------------------------------------------------------------------------------------+
| Grants for airflow@localhost                                                                                   |
+----------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'airflow'@'localhost' IDENTIFIED BY PASSWORD '*6D9712F10090993204A9871BD8200AAB8E8CA14E' |
| GRANT ALL PRIVILEGES ON `airflowdb`.* TO 'airflow'@'localhost'                                                 |
| GRANT ALL PRIVILEGES ON `airflow`.* TO 'airflow'@'localhost'                                                   |
+----------------------------------------------------------------------------------------------------------------+

mysql> revoke delete on airflow.* from airflow@localhost;
Query OK, 0 rows affected (0.00 sec)

mysql> show grants for airflow@localhost;
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Grants for airflow@localhost                                                                                                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'airflow'@'localhost' IDENTIFIED BY PASSWORD '*6D9712F10090993204A9871BD8200AAB8E8CA14E'                                                                                                                     |
| GRANT ALL PRIVILEGES ON `airflowdb`.* TO 'airflow'@'localhost'                                                                                                                                                                     |
| GRANT SELECT, INSERT, UPDATE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER ON `airflow`.* TO 'airflow'@'localhost' |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
3 rows in set (0.00 sec)


# 12, mysql 排除某个表 备份
#
# //dump数据库database中所有表的结构到database.sql文件中
mysqldump -uroot -p123456 -d database > database.sql

# //dump除过table1和table2其余所有表中的数据追加到database.sql文件中
mysqldump -uroot -p123456 -t --ignore-table=database.table1 --ignore-table=database.table2 >> database.sql

# //dump指定表中的数据
mysqldump -uroot -p123456 -t database table1 table2 > database.sql

# 13, mysql 查询某些表的 大小
#
# 首先打开指定的数据库：
use information_schema;

# 如果想看指定数据库中的数据表，可以用如下语句：
select concat(round(sum(DATA_LENGTH/1024/1024),2),'MB') as data from TABLES where table_schema='DB_NAME' and table_name='TABLE_NAME';

# 如果想看数据库中每个数据表的，可以用如下语句：
SELECT TABLE_NAME,DATA_LENGTH+INDEX_LENGTH,TABLE_ROWS,concat(round((DATA_LENGTH+INDEX_LENGTH)/1024/1024,2), 'MB') as data FROM TABLES WHERE TABLE_SCHEMA='DB_NAME';

# 14, Python2.7 Python2.7 Python2.7

import sys
import os

print '\033[31m************** before ***************\033[0m'
print sys.path

sys.path.append(os.path.join(sys.path[0], ".."))

print '\033[32m************** after ****************\033[0m'
print sys.path

# 15, TiDB 暂不支持 alter ... modify  2018-06-15
#
ALTER TABLE task_instance MODIFY duration FLOAT NULL
参考：https://github.com/pingcap/docs/blob/master/sql/mysql-compatibility.md

更多：https://www.pingcap.com/docs-cn/


# 16, Django Python
#
https://my.oschina.net/jhao104/blog/827344

# 17, python 判断数据类型 list, tuple, dict
#
>>> a = {1:0, 2:1, 3:2}
>>> a 
>>> type(a).__name__ == 'dict'

>>> type(a).__name__ == 'list'




